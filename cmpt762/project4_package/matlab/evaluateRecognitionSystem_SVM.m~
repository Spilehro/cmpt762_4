
test_imagenames = load('../data/traintest.mat','test_imagenames').test_imagenames;
test_labels = load('../data/traintest.mat','test_labels').test_labels;
test_num = size(test_imagenames,2);
root_dir = '../data/';


trainFeaturesh = load('visionHarris.mat','dictionary','filterBank','trainFeatures','trainLabels').trainFeatures;


trainFeaturesr = load('visionRandom.mat','dictionary','filterBank','trainFeatures','trainLabels').trainFeatures;

trainLables = load('visionHarris.mat','dictionary','filterBank','trainFeatures','trainLabels').trainLabels;



confusionh_g = zeros(8,8);
confusionr_g = zeros(8,8);
confusionh_p = zeros(8,8);
confusionr_p = zeros(8,8);

correcth_g=0;
correctr_g=0;
correcth_p=0;
correctr_p=0;

Xh = trainFeaturesh;
Xr = trainFeaturesr;
Y = trainLables;


tg = templateSVM('Standardize',true,'KernelFunction','gaussian');
tp = templateSVM('Standardize',true,'KernelFunction','polynomial');

Mdlh_g = fitcecoc(Xh,Y,'Learners',tg,'FitPosterior',true,...
    'ClassNames',{1,2,3,4,5,6,7,8},...
    'Verbose',2);

Mdlr_g = fitcecoc(Xr,Y,'Learners',tg,'FitPosterior',true,...
    'ClassNames',{1,2,3,4,5,6,7,8},...
    'Verbose',2);

Mdlh_p = fitcecoc(Xh,Y,'Learners',tp,'FitPosterior',true,...
    'ClassNames',{1,2,3,4,5,6,7,8},...
    'Verbose',2);

Mdlr_p = fitcecoc(Xr,Y,'Learners',tp,'FitPosterior',true,...
    'ClassNames',{1,2,3,4,5,6,7,8},...
    'Verbose',2);


for i=1:test_num
    wordMap_name =strcat(root_dir,test_imagenames{1,i});
    
    wordMaph_name=strrep(wordMap_name,'.jpg','_Harris.mat');
    wordMapr_name=strrep(wordMap_name,'.jpg','_Random.mat');
   
    
    wordMaph = load(wordMaph_name,'wordMaph').wordMaph;
    wordMapr = load(wordMapr_name,'wordMapr').wordMapr;
    
    histh = getImageFeatures(wordMaph,dictionary_size);
    histr = getImageFeatures(wordMapr,dictionary_size);
    
    predh_g=predict(Mdlh_g,histh);
    predr_g = predict(Mdlr_g,histr);
    
    predh_p=predict(Mdlh_p,histh);
    predr_p = predict(Mdlr_p,histr);
    
    
    testLabel =test_labels(1,i); 
    
    if(predh_g== testLabel)
        correcth_g = correcth_g+1;
    end
    
    if(predr_g== testLabel)
        correctr_g = correctr_g+1;
    end
    
     
    
    confusionh(testLabel,predh_g)=confusionh(testLabel,predh_g)+1;
    confusionr_g (testLabel,predr_g)=confusionr_g(testLabel,predr_g)+1;
end

accuracyh = correcth_g/test_num;
accuracyr = correctr_g/test_num;

disp(strcat('HE ',num2str(accuracyh)));
disp(strcat('RC ',num2str(accuracyr)));































